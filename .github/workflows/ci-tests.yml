# #
#   @type               github workflow
#   @author             Aetherinox
#   @url                https://github.com/Aetherinox
#   @usage              run npm tests
#
#   @secrets            secrets.SELF_TOKEN                                          self github personal access token (fine-grained)
#                       secrets.SELF_TOKEN_CL                                       self github personal access token (classic)
#                       secrets.NPM_TOKEN                                           self npmjs access token
#                       secrets.PYPI_API_TOKEN                                      self Pypi API token (production site) - https://pypi.org/
#                       secrets.PYPI_API_TEST_TOKEN                                 self Pypi API token (test site) - https://test.pypi.org/
#                       secrets.SELF_DOCKERHUB_TOKEN                                self Dockerhub token
#                       secrets.CODECOV_TOKEN                                       codecov upload token for nodejs projects
#                       secrets.MAXMIND_GELITE_TOKEN                                maxmind API token
#                       secrets.CF_ACCOUNT_ID                                       cloudflare account id
#                       secrets.CF_ACCOUNT_TOKEN                                    cloudflare account token
#                       secrets.ORG_TOKEN                                           org github personal access token (fine-grained)
#                       secrets.ORG_TOKEN_CL                                        org github personal access token (classic)
#                       secrets.ORG_DOCKERHUB_TOKEN                                 org dockerhub secret
#                       secrets.ORG_GITEA_TOKEN                                     org gitea personal access token (classic) with package:write permission
#                       secrets.BOT_GPG_KEY_ASC                                     bot gpg private key (armored) | BEGIN PGP PRIVATE KEY BLOCK
#                       secrets.BOT_GPG_KEY_B64                                     bot gpg private key (binary) converted to base64
#                       secrets.BOT_GPG_PASSPHRASE                                  bot gpg private key passphrase
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_RELEASES                discord webhook to report release notifications from github to discord
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_WORKFLOWS               discord webhook to report workflow notifications from github to discord
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_UPDATES                 discord webhook to report activity notifications from github to discord
#
#   @local              these workflows can be tested locally through the use of `act`
#                           https://github.com/nektos/act
#                       Extract act to folder
#                       Add system env var with path to act.exe
#                       Run the commands:
#                           git pull https://github.com/username/repo
#                           act -W .github/workflows/npm-tests.yml -P ubuntu-latest=catthehacker/ubuntu:full-22.04
#                           act -W .github/workflows/npm-tests.yml -s TOKEN_CL=XXXXXXXXXX --pull=false
# #

run-name: '🌑 NPM › Tests'
name: '☁️ NPM › Tests'

# #
#   triggers
# #

on:
  push:
      branches:
          - 'main'
  pull_request:
      branches:
          - 'main'

# #
#   environment variables
# #

env:
    FOLDER_DIST:            'dist'
    BOT_NAME:               BinaryServ
    BOT_NAME_DEPENDABOT:    dependabot[bot]
    GITHUB_TOKEN:           ${{ secrets.SELF_TOKEN_CL }}
    OWNER:                  ${{ github.repository_owner }}

# #
#   jobs
# #

jobs:
    npm-tests:
        name: >-
          📦 Initialize
        runs-on: ubuntu-latest
        permissions: write-all
        outputs:
            package_version: ${{ steps.task_npmtest_package_version.outputs.PACKAGE_VERSION }}
        steps:

            # #
            #   [ CI ] Start
            # #

            - name: '✅ Start'
              run: |
                  echo "Starting nightly reset"

            # #
            #   [ CI ] Checkout
            # #

            - name: '☑️ Checkout'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # #
            #   [ CI ] Node Setup
            # #

            - name: '⚙️ Setup › Node'
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  registry-url: https://npm.pkg.github.com/
                  scope: '@aetherinox'

            # #
            #   [ CI ] Node - Install
            # #

            - name: '📦 NPM › Install'
              run: |
                  npm install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.SELF_TOKEN }}

            # #
            #   Package Version > Set
            #   Get version from package.json VERSION value
            # #

            - name: '👁️‍🗨️ Package Version › Get'
              id: task_npmtest_package_version
              run: |
                  VER=$(cat package.json | jq -r '.version')
                  echo "PACKAGE_VERSION=$VER" >> $GITHUB_OUTPUT

            # #
            #   Package Version > Print (Debug)
            # #

            - name: '👁️‍🗨️ Package Version › Print'
              run: |
                  echo "VERSION: ${{ steps.task_initialize_package_version.outputs.PACKAGE_VERSION }}"

            # #
            #   [ CI ] Lint
            # #

            - name: '📦 NPM › Lint'
              run: npm run lint

            # #
            #   Release > Execute npm generate so that a uuid and guid can be created
            # #

            - name: '🪪 Generate IDs'
              run: |
                  npm run root:generate

            # #
            #   .ENV > Get
            #   Get guid and uuid from env variable generated by npm
            # #

            - name: '🪪 .ENV › Get'
              id: task_npmtest_dotenv_get
              uses: falti/dotenv-action@v1

            # #
            #   .ENV > Print (Debug)
            #   Show guid and uuid from env variable generated by npm
            # #

            - name: '🪪 .ENV › Read'
              run: |
                  echo "GUID: ${{ steps.task_npmtest_dotenv_get.outputs.GUID }}"
                  echo "UUID: ${{ steps.task_npmtest_dotenv_get.outputs.UUID }}"

            # #
            #   [ CI ] Test
            # #

            - name: '📦 NPM › Test'
              run: npm run test
              env:
                  GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

            # #
            #   [ CI ] Create Github Deployment
            # #

            - name: '🔨 Create GitHub deployment'
              uses: chrnorm/deployment-action@v2
              with:
                  token: ${{ env.GITHUB_TOKEN }}
                  environment: test
                  initial-status: success

            # #
            #   [ CI ] Delete Github Deployment
            # #

            - name: '🔨 Delete GitHub deployment'
              uses: ./
              with:
                  token: ${{ env.GITHUB_TOKEN }}
                  environment: test
